{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/asmit rai/Downloads/CodeCollab/CodeCollab/code-collab/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/asmit rai/Downloads/CodeCollab/CodeCollab/code-collab/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\asmit rai\\\\Downloads\\\\CodeCollab\\\\CodeCollab\\\\code-collab\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useRef,useEffect}from'react';import toast from'react-hot-toast';import ACTIONS from'../Actions';import Client from'../components/Client';import Editor from'../components/Editor';import{initSocket}from'../socket';import{useLocation,useNavigate,Navigate,useParams}from'react-router-dom';import Compiler from'../components/Compiler';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditorPage=function EditorPage(){var socketRef=useRef(null);var codeRef=useRef('');var location=useLocation();var _useParams=useParams(),roomId=_useParams.roomId;var reactNavigator=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];var _useState3=useState(localStorage.getItem('input')||''),_useState4=_slicedToArray(_useState3,2),code=_useState4[0],setCode=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),copiedCode=_useState6[0],setCopiedCode=_useState6[1];var handleCodeChange=function handleCodeChange(newCode){setCode(newCode);};var passCodeToCompiler=function passCodeToCompiler(){setCode(codeRef.current);};var copyToCompiler=function copyToCompiler(){setCopiedCode(codeRef.current);};useEffect(function(){var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _location$state;var handleErrors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:handleErrors=function _handleErrors(e){console.log('socket error',e);toast.error('Socket connection failed, try again later.');reactNavigator('/');};_context.next=3;return initSocket();case 3:socketRef.current=_context.sent;socketRef.current.on('connect_error',function(err){return handleErrors(err);});socketRef.current.on('connect_failed',function(err){return handleErrors(err);});socketRef.current.emit(ACTIONS.JOIN,{roomId:roomId,username:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username});socketRef.current.on(ACTIONS.JOINED,function(_ref2){var _location$state2;var clients=_ref2.clients,username=_ref2.username,socketId=_ref2.socketId;if(username!==((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.username)){toast.success(\"\".concat(username,\" joined the room.\"));console.log(\"\".concat(username,\" joined\"));}setClients(clients);socketRef.current.emit(ACTIONS.SYNC_CODE,{code:codeRef.current,socketId:socketId});});socketRef.current.on(ACTIONS.DISCONNECTED,function(_ref3){var socketId=_ref3.socketId,username=_ref3.username;toast.success(\"\".concat(username,\" left the room.\"));setClients(function(prev){return prev.filter(function(client){return client.socketId!==socketId;});});});case 9:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();return function(){//socketRef.current.disconnect();\n//socketRef.current.off(ACTIONS.JOINED);\n//socketRef.current.off(ACTIONS.DISCONNECTED);\n};},[]);function copyRoomId(){return _copyRoomId.apply(this,arguments);}function _copyRoomId(){_copyRoomId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return navigator.clipboard.writeText(roomId);case 3:toast.success('Room ID has been copied to your clipboard');_context2.next=10;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);toast.error('Could not copy the Room ID');console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return _copyRoomId.apply(this,arguments);}function leaveRoom(){reactNavigator('/');}if(!location.state){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"mainWrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"aside\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"asideInner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{className:\"logoImage\",src:\"/code-sync.png\",alt:\"logo\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Connected\"}),/*#__PURE__*/_jsx(\"div\",{className:\"clientsList\",children:clients.map(function(client){return/*#__PURE__*/_jsx(Client,{username:client.username},client.socketId);})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn copyBtn\",onClick:copyRoomId,children:\"Copy ROOM ID\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn leaveBtn\",onClick:leaveRoom,children:\"Leave\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"editorWrap\",children:/*#__PURE__*/_jsx(Editor,{socketRef:socketRef,roomId:roomId,onCodeChange:handleCodeChange})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Output_Section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"Output\",className:\"text-light\",children:\"Output\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",\"aria-label\":\"last name\"})]}),/*#__PURE__*/_jsx(Compiler,{code:code,copiedCode:copiedCode})]});};export default EditorPage;","map":{"version":3,"sources":["C:/Users/asmit rai/Downloads/CodeCollab/CodeCollab/code-collab/src/pages/EditorPage.js"],"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","Compiler","EditorPage","socketRef","codeRef","location","roomId","reactNavigator","clients","setClients","localStorage","getItem","code","setCode","copiedCode","setCopiedCode","handleCodeChange","newCode","passCodeToCompiler","current","copyToCompiler","init","handleErrors","e","console","log","error","on","err","emit","JOIN","username","state","JOINED","socketId","success","SYNC_CODE","DISCONNECTED","prev","filter","client","copyRoomId","navigator","clipboard","writeText","leaveRoom","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\nimport Compiler from '../components/Compiler';\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const codeRef = useRef('');\n    const location = useLocation();\n    const { roomId } = useParams();\n    const reactNavigator = useNavigate();\n    const [clients, setClients] = useState([]);\n    const [code, setCode] = useState(localStorage.getItem('input') || '');\n    const [copiedCode, setCopiedCode] = useState('');\n\n    const handleCodeChange = (newCode) => {\n        setCode(newCode);\n    };\n\n    const passCodeToCompiler = () => {\n        setCode(codeRef.current);\n    };\n\n    const copyToCompiler = () => {\n        setCopiedCode(codeRef.current);\n    };\n\n    useEffect(() => {\n        const init = async () => {\n            socketRef.current = await initSocket();\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\n\n            function handleErrors(e) {\n                console.log('socket error', e);\n                toast.error('Socket connection failed, try again later.');\n                reactNavigator('/');\n            }\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            socketRef.current.on(\n                ACTIONS.JOINED,\n                ({ clients, username, socketId }) => {\n                    if (username !== location.state?.username) {\n                        toast.success(`${username} joined the room.`);\n                        console.log(`${username} joined`);\n                    }\n                    setClients(clients);\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                        code: codeRef.current,\n                        socketId,\n                    });\n                }\n            );\n\n            socketRef.current.on(\n                ACTIONS.DISCONNECTED,\n                ({ socketId, username }) => {\n                    toast.success(`${username} left the room.`);\n                    setClients((prev) => {\n                        return prev.filter(\n                            (client) => client.socketId !== socketId\n                        );\n                    });\n                }\n            );\n        };\n        init();\n        return () => {\n            //socketRef.current.disconnect();\n            //socketRef.current.off(ACTIONS.JOINED);\n            //socketRef.current.off(ACTIONS.DISCONNECTED);\n        };\n    }, []);\n\n    async function copyRoomId() {\n        try {\n            await navigator.clipboard.writeText(roomId);\n            toast.success('Room ID has been copied to your clipboard');\n        } catch (err) {\n            toast.error('Could not copy the Room ID');\n            console.error(err);\n        }\n    }\n\n    function leaveRoom() {\n        reactNavigator('/');\n    }\n\n    if (!location.state) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <div className=\"mainWrap\">\n            <div className=\"aside\">\n                <div className=\"asideInner\">\n                    <div className=\"logo\">\n                        <img\n                            className=\"logoImage\"\n                            src=\"/code-sync.png\"\n                            alt=\"logo\"\n                        />\n                    </div>\n                    <h3>Connected</h3>\n                    <div className=\"clientsList\">\n                        {clients.map((client) => (\n                            <Client\n                                key={client.socketId}\n                                username={client.username}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\n                    Copy ROOM ID\n                </button>\n                <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n                    Leave\n                </button>\n                {/* <button className=\"btn passCodeBtn\" onClick={passCodeToCompiler}>\n                    Pass Code to Compiler\n                </button> */}\n                {/* <button className=\"btn copyToCompilerBtn\" onClick={copyToCompiler}>\n                    Copy to Compiler\n                </button> */}\n            </div>\n\n            <div className=\"editorWrap\">\n                <Editor\n                    socketRef={socketRef}\n                    roomId={roomId}\n                    onCodeChange={handleCodeChange}\n                />\n            </div>\n\n            <div className='Output_Section'>\n                <label htmlFor=\"Output\" className='text-light'>Output</label>\n                <textarea className=\"form-control\" aria-label=\"last name\"></textarea>\n            </div>\n            \n            <Compiler code={code} copiedCode={copiedCode} />\n        </div>\n    );\n};\n\nexport default EditorPage;\n"]},"metadata":{},"sourceType":"module"}